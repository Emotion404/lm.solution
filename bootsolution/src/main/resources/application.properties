
# spring boot 全局配置文件

# profile 环境配置
spring.profiles.active=dev

# 指定根路径
server.context-path=/

## 日志配置
# 配置日志文件
logging.file=E:/springboot/log.log
# 配置日志级别
logging.level.org.springframework.web=DEBUG
# spring security 日志配置
logging.level.org.springframework.security=INFO

# ICON
spring.mvc.favicon.enabled=false

# 数据库基本配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/mybatis?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=liumeng
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Thymeleaf
spring.thymeleaf.cache=false

# spring data jpa 配置
spring.jpa.database=MYSQL
# 用来设置 hibernate 操作的时候在控制台显示其真实的 sql 语句
spring.jpa.show-sql=true
# 自动检查实体和数据库表是否一致,然后采用相应动作
# create -- 启动时删除上一次生成的表，并根据实体类生成表，表中数据会被清空
# create-drop -- 启动时根据实体类生成表，sessionFactory关闭时表会被删除
# update -- 启动时会根据实体类生成表，当实体类属性变动的时候，表结构也会更新，在初期开发阶段使用此选项
# validate -- 启动时验证实体类和数据表是否一致，在我们数据结构稳定时采用此选项
# none -- 不采取任何措施
spring.jpa.hibernate.ddl-auto=validate
# 让控制器输出的 json 字符串格式更美观
spring.jackson.serialization.indent-output=true


# 定制 spring data rest 路径
spring.data.rest.base-path=/api/springdatarest


# Redis 参考 springsolution
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.password=$123$
spring.redis.port=6380
spring.redis.pool.max-idle=50
spring.redis.pool.min-idle=10
spring.redis.pool.max-active=200
spring.redis.pool.max-wait=300

# SSL
#server.ssl.key-store=.keystore
#server.ssl.key-store-password=123456
#server.ssl.key-password=456789
#server.ssl.key-store-type=JKS
#server.ssl.key-alias=lmsolution

